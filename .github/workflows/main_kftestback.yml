name: FastAPI CI and Deploy

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  dev-run:
    runs-on: ubuntu-latest

    env:  
      container_name: ${{ secrets.container_name }}
      SAS_url: ${{ secrets.SAS_url }}
      SAS_token: ${{ secrets.SAS_token }}
      DI_endpoint: ${{ secrets.DI_endpoint }}
      DI_key: ${{ secrets.DI_key }}
      Azure_endpoint: ${{ secrets.Azure_endpoint }}
      Azure_key: ${{ secrets.Azure_key }}

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📂 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ✅ Run FastAPI app (basic check)
        run: |
          uvicorn testUp:app --host 0.0.0.0 --port 8000 &
          sleep 5
          curl -f http://localhost:8000 || exit 1
        shell: bash

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 🛠️ Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: 📦 Install dependencies
        run: pip install -r requirements.txt

      # Optional test step could go here

      - name: 📦 Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: 📤 Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📥 Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: 📂 Unzip artifact for deployment
        run: unzip release.zip

      - name: 🔐 Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: 🚀 Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'kfbackendtest'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          